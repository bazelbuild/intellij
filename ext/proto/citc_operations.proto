/*
 * Copyright 2024 The Bazel Authors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package com.google.idea.blaze.ext;

option java_package = "com.google.idea.blaze.ext";
option java_multiple_files = true;
option java_outer_classname = "CitcOperationsProto";


message CitcRoot {
  string root = 1;
}

message CitcFileState {
  string hash = 1;
  FileType file_type = 2;

  enum FileType {
    UNKNOWN = 0;
    FILE = 1;
    SYMLINK = 2;
    TOMBSTONE = 3;
    ANNOTATION = 4;
    DIRECTORY = 5;
  }
}

message CitcManifest {
  // A map from a workspce relative path to the state of the file in the
  // workspace.
  map<string, CitcFileState> file_states = 1;
  // An opaque hash value used to detect changes to the view config.
  string view_config_hash = 2;
}

message ReadWorkspaceIdRequest {
  CitcRoot citc_root = 1;
}
message ReadWorkspaceIdResponse {
  optional string workspace_id = 1;
}

message ForceUpdateRequest {
  CitcRoot citc_root = 1;
  // If provided skips update if the locally known snapshot version is newer
  // than the requested one.
  int64 min_snapshot_version = 2;
}
message ForceUpdateResponse {}

message ReadSnapshotVersionRequest {
  CitcRoot citc_root = 1;
}
message ReadSnapshotVersionResponse {
  int64 snapshot_version = 1;
}

message ReadStaleSnapshotVersionRequest {
  CitcRoot citc_root = 1;
}
message ReadStaleSnapshotVersionResponse {
  int64 possibly_stale_snapshot_version = 1;
}

message ReadCitcManifestRequest {
  CitcRoot citc_root = 1;
  // if not provided, read file states from the head.
  optional int64 snapshot_version = 2;
}

message ReadCitcManifestResponse {
  CitcManifest citc_manifest = 1;
}

message GetSnapshotDiffRequest {
  CitcRoot citc_root = 1;
  // Workspace relative paths to diff.
  repeated string paths = 2;
  optional string beging_workspace_id = 3;
  int64 begin_snapshot = 4;
  int64 end_snapshot = 5;
  bool include_fig_annotations = 6;
}
message GetSnapshotDiffResponse {
  repeated string files = 1;
  repeated string recursive_directories = 2;
}

//  A locally running intellij-ext service that knows how to act on a local
//  citc root.
service CitcOperationsService {
  // Reads the workspace id of the citc root.
  rpc ReadWorkspaceId(ReadWorkspaceIdRequest)
      returns (ReadWorkspaceIdResponse) {}
  // Forces a citc update.
  rpc ForceUpdate(ForceUpdateRequest) returns (ForceUpdateResponse) {}
  // Reads the snapshot version of the citc root.
  rpc ReadSnapshotVersion(ReadSnapshotVersionRequest)
      returns (ReadSnapshotVersionResponse) {}
  // Reads the stale snapshot version of the citc root.
  rpc ReadStaleSnapshotVersion(ReadStaleSnapshotVersionRequest)
      returns (ReadStaleSnapshotVersionResponse) {}
  // Reads the file states of the citc root.
  rpc ReadCitcManifest(ReadCitcManifestRequest)
      returns (ReadCitcManifestResponse) {}
  // Retrieves the diff between a snapshot in the current workspace and another
  // snapsot (possibly in a different workspace.)
  rpc GetSnapshotDiff(GetSnapshotDiffRequest)
      returns (GetSnapshotDiffResponse) {}
}
