/*
 * Copyright 2023 The Bazel Authors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package com.google.idea.blaze.ext;

option java_package = "com.google.idea.blaze.ext";
option java_multiple_files = true;
option java_outer_classname = "IssueTrackerProto";


message Issue {
  int64 issue_id = 1;

  string status = 2;

  bool closed = 3;

  int64 component_id = 4;

  string priority = 5;

  string severity = 6;

  string type = 7;

  string title = 8;

  int64 vote_count = 9;

  string assignee = 10;

  string reporter = 11;
}

message Component {
  int64 component_id = 1;

  string name = 2;
}

message ListIssuesRequest {
  string query = 1;
}

message ListIssuesResponse {
  repeated Issue issue = 1;
}

message GetIssueRequest {
  int64 issue_id = 1;
}

message GetComponentRequest {
  int64 component_id = 1;
}

message CreateIssueRequest {
  int64 component_id = 1;
  string title = 2;
  string comment = 3;
}

message AttachFileRequest {
  int64 issue_id = 1;
  string type = 2;
  string name = 3;
  string path = 4;
}

message AttachFileResponse {}

service IssueTracker {
  // Returns the Issue with the given issue_id.
  rpc GetIssue(GetIssueRequest) returns (Issue) {}

  // Returns the Component with the given component_id.
  rpc GetComponent(GetComponentRequest) returns (Component) {}

  // Lists all the Issues that result of the given query.
  rpc ListIssues(ListIssuesRequest) returns (ListIssuesResponse) {}

  // Creates an issue for the current user, with the given information.
  rpc CreateIssue(CreateIssueRequest) returns (Issue) {}

  // Attaches the file at the local path given to the issue with issue_id.
  rpc AttachFile(AttachFileRequest) returns (AttachFileResponse) {}
}
