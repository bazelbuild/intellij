// Copyright 2023 The Bazel Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blaze;

// option java_api_version = 2;
option java_package = "com.google.devtools.intellij.qsync";

// The artifacts built for a given target
message TargetArtifacts {
  string target = 1;
  reserved 2;
  repeated string srcs = 3;  // Workspace relative.
  // Note: The following fields are workspace relative in test data only.
  repeated string jars = 4;      // Build output relative in target-info.txt.
  repeated string ide_aars = 5;  // Build output relative in target-info.txt.
  repeated string gen_srcs = 6;  // Build output relative in target-info.txt.
}

// The list of all targets built and their artifacts. Note that because
// of aliases, many targets can point to the same path on disk.
// This is the proto written (in text format) to artifact_info.txt by
// build_dependencies.bzl
message BuildArtifacts {
  repeated TargetArtifacts artifacts = 1;
}

message CachedArtifacts {
  map<string, string> cache_path_to_artifact_path = 1;
}

// Persistent state for ArtifactTrackerImpl, including artifact info provided by
// the aspect and the origins of artifacts in the cache.
message ArtifactTrackerState {
  BuildArtifacts artifact_info = 1;
  CachedArtifacts cached_artifacts = 2;
  int32 version = 3;
}
